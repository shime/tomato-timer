#!/usr/bin/env node

var growl    = require('growl')
  , program  = require('commander')
  , path     = require('path')
  , fs       = require('fs')
  , after    = require('after-time')

  , repeat   = require('repeat-time')
  , progress = require('../ext/progress')
  , color    = require('colors')
  , time     = require('humanize-time')

  , version  = require('../package').version
  , pomodoro = path.join(__dirname, '..', 'assets', 'tomato.png')

program
  .version(version)
  .option('-t, --task <name>', 'task name')
  .parse(process.argv)

var task = program.task
  , bar  = new progress(task + ' :bar :percent :elapsed'.red, {
    total: 25 * 60,
    width: 25,
    formatter: function(eta, elapsed, percent){
      return this.fmt
        .replace(':current', this.curr)
        .replace(':total', this.total)
        .replace(':elapsed', isNaN(elapsed) ? '0.0' : time(elapsed))
        .replace(':eta', (isNaN(eta) || !isFinite(eta)) ? '0.0' : (eta / 1000)
          .toFixed(1))
        .replace(':percent', percent.toFixed(0) + '%')
    }
  })

if (task){
  startTask()
} else {
  program.help()
}

function renderBar(){
  console.log("task in progress".cyan)
  bar.tick()
  repeat('1 s', function(){
    bar.tick()
  })
}

function growlNotify(){
  growl(task, { title: 'Pomodoro - task started', image: pomodoro })
  after('25 mins', function() {
    growl(task, { title: 'Pomodoro - take a break!', image: pomodoro })
    process.exit()
  })
}

function startTask(){
  renderBar()
  growlNotify()
}
